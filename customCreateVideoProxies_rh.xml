<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
          xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
          id="customCreateVideoProxies_rh"
          name="customCreateVideoProxies_rh"
          executionLabelExpression="Create Video Proxies | asset: ${subject.name}"
          description=""
          deadlineExpression=""
          subjectDOClassName="VideoAssetMaster"
          showInUserInterface="false"
          subjectQualifierExpression=""
          sdkVersion="5.21"
>

    <initialStepName>check proxies options</initialStepName>


    <!-- ................................................... Initial Checks .................................................... -->
    <noopStep name="check proxies options"
              executionLabelExpression="Mezz option? ${mezzFile != null AND !mezzFile.absolutePath.equals('')? 'File' : (createMezz? 'Create' : 'None')} | Proxy option? ${proxyFile != null AND !proxyFile.absolutePath.equals('')? 'File' : (createProxy? 'Create' : 'None')} | Thumb Video option? ${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('')? 'File' : (createThumbVideo? 'Create' : 'None')} | Thumb option? ${thumbFile != null AND !thumbFile.absolutePath.equals('')? 'File' : (createThumb? 'Create' : 'None')}"
              pctComplete="2"
    >
        <!-- Mezz -->
        <transition condition="${mezzFile != null AND !mezzFile.absolutePath.equals('') AND #mezzanineContent(subject) != null AND #mezzanineContent(subject).file.exists()}">
            <targetStepName>delete old mezz</targetStepName>
        </transition>
        <transition condition="${mezzFile != null AND !mezzFile.absolutePath.equals('')}">
            <targetStepName>save mezz</targetStepName>
        </transition>
        <transition condition="${createMezz}">
            <targetStepName>create mezz</targetStepName>
        </transition>
        <!-- Proxy -->
        <transition condition="${proxyFile != null AND !proxyFile.absolutePath.equals('') AND #proxyContent(subject) != null AND #proxyContent(subject).file.exists()}">
            <targetStepName>delete old proxy</targetStepName>
        </transition>
        <transition condition="${proxyFile != null AND !proxyFile.absolutePath.equals('')}">
            <targetStepName>save proxy</targetStepName>
        </transition>
        <transition condition="${createProxy}">
            <targetStepName>create proxy</targetStepName>
        </transition>
        <!-- Thumb Video -->
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('') AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>delete old thumb video</targetStepName>
        </transition>
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('')}">
            <targetStepName>save thumb video</targetStepName>
        </transition>
        <transition condition="${createThumbVideo}">
            <targetStepName>create thumb video</targetStepName>
        </transition>
        <!-- Thumb -->
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('') AND #thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('')}">
            <targetStepName>save thumb</targetStepName>
        </transition>
        <transition condition="${createThumb AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>create thumb</targetStepName>
        </transition>
        <transition condition="${createThumb}">
            <targetStepName>cannot create thumb</targetStepName>
        </transition>
        <!-- Nothing to do -->
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
    </noopStep>


    <!-- ..................................................... Mezz Steps ...................................................... -->
    <convertVideoStep name="create mezz"
                      sourceFileExpression="${sourceFile}"
                      imageSequenceInfoExpression="${#imageSequenceInfo(#sourceContent(subject))}"
                      mediaConversionTemplateExpression="${mezzTemplate}"
                      resultDataDef="tempMezzFile"
                      priorityExpression="${mezzPriority}"
                      continueOnException="true"
                      executionLabelExpression="Transcode mezz from original file. | Profile: ${mezzTemplate}"
                      pctComplete="15"
    >
        <transition condition="${tempMezzFile?.exists()}">
            <targetStepName>set mezz file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>mezz error</targetStepName>
        </transition>
    </convertVideoStep>


    <setContextData name="set mezz file"
                    targetDataDef="mezzFile"
                    valueExpression="${tempMezzFile}"
                    pctComplete="16"
                    devStep="true"
    >
        <transition condition="${#mezzanineContent(subject) != null AND #mezzanineContent(subject).file.exists()}">
            <targetStepName>delete old mezz</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>save mezz</targetStepName>
        </transition>
    </setContextData>


    <deleteFileStep name="delete old mezz"
                    sourceFilesExpression="${ #mezzanineContent(subject)?.file }"
                    executionLabelExpression="deleting old mezz: ${#mezzanineContent(subject)?.file?.absolutePath}"
                    continueOnException="true"
                    pctComplete="17"
                    nextStep="save mezz"
    />


    <saveAssetStep name="save mezz"
                   contentExpression="${mezzFile}"
                   contentUseExpression="Mezzanine"
                   versionAssetExpression="false"
                   assetExpression="${subject.currentVersion}"
                   executionLabelExpression="Save new mezz to asset | file: ${mezzFile?.absolutePath}"
                   pctComplete="20"
    >
        <!-- Errors -->
        <exception-transition type="WorkflowException">
            <targetStepName>mezz error</targetStepName>
        </exception-transition>
        <exception-transition type="AssetException">
            <targetStepName>mezz error</targetStepName>
        </exception-transition>
        <exception-transition type="NullPointerException">
            <targetStepName>mezz error</targetStepName>
        </exception-transition>
        <!-- Proxy -->
        <transition condition="${proxyFile != null AND !proxyFile.absolutePath.equals('') AND #proxyContent(subject) != null AND #proxyContent(subject).file.exists()}">
            <targetStepName>delete old proxy</targetStepName>
        </transition>
        <transition condition="${proxyFile != null AND !proxyFile.absolutePath.equals('')}">
            <targetStepName>save proxy</targetStepName>
        </transition>
        <transition condition="${createProxy}">
            <targetStepName>create proxy</targetStepName>
        </transition>
        <!-- Thumb Video -->
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('') AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>delete old thumb video</targetStepName>
        </transition>
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('')}">
            <targetStepName>save thumb video</targetStepName>
        </transition>
        <transition condition="${createThumbVideo}">
            <targetStepName>create thumb video</targetStepName>
        </transition>
        <!-- Thumb -->
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('') AND #thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('')}">
            <targetStepName>save thumb</targetStepName>
        </transition>
        <transition condition="${createThumb AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>create thumb</targetStepName>
        </transition>
        <transition condition="${createThumb}">
            <targetStepName>cannot create thumb</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </saveAssetStep>


    <noopStep name="mezz error"
              executionLabelExpression="there was an error creating/saving mezz. | fail? ${failOnError}"
    >
        <transition condition="${failOnError}">
            <targetStepName>mezz failed</targetStepName>
        </transition>
        <!-- Thumb Video -->
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('') AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>delete old thumb video</targetStepName>
        </transition>
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('')}">
            <targetStepName>save thumb video</targetStepName>
        </transition>
        <transition condition="${createThumbVideo}">
            <targetStepName>create thumb video</targetStepName>
        </transition>
        <!-- Thumb -->
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('') AND #thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('')}">
            <targetStepName>save thumb</targetStepName>
        </transition>
        <transition condition="${createThumb AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>create thumb</targetStepName>
        </transition>
        <transition condition="${createThumb}">
            <targetStepName>cannot create thumb</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </noopStep>


    <!-- ..................................................... Proxy Steps ..................................................... -->
    <convertVideoStep name="create proxy"
                      sourceFileExpression="${sourceFile}"
                      imageSequenceInfoExpression="${#imageSequenceInfo(#sourceContent(subject))}"
                      mediaConversionTemplateExpression="${proxyTemplate}"
                      resultDataDef="tempProxyFile"
                      priorityExpression="${proxyPriority}"
                      continueOnException="true"
                      executionLabelExpression="Transcode proxy from original file. | Profile: ${proxyTemplate}"
                      pctComplete="35"
    >
        <transition condition="${tempProxyFile?.exists()}">
            <targetStepName>set proxy file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>proxy error</targetStepName>
        </transition>
    </convertVideoStep>


    <setContextData name="set proxy file"
                    targetDataDef="proxyFile"
                    valueExpression="${tempProxyFile}"
                    pctComplete="36"
                    devStep="true"
    >
        <transition condition="${#proxyContent(subject) != null AND #proxyContent(subject).file.exists()}">
            <targetStepName>delete old proxy</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>save proxy</targetStepName>
        </transition>
    </setContextData>


    <deleteFileStep name="delete old proxy"
                    sourceFilesExpression="${ #proxyContent(subject)?.file }"
                    executionLabelExpression="deleting old proxy: ${#proxyContent(subject)?.file?.absolutePath}"
                    continueOnException="true"
                    pctComplete="37"
                    nextStep="save proxy"
    />


    <saveAssetStep name="save proxy"
                   contentExpression="${proxyFile}"
                   contentUseExpression="Proxy"
                   versionAssetExpression="false"
                   assetExpression="${subject.currentVersion}"
                   executionLabelExpression="Save new proxy to asset | file: ${proxyFile?.absolutePath}"
                   pctComplete="40"
    >
        <!-- Errors -->
        <exception-transition type="WorkflowException">
            <targetStepName>proxy error</targetStepName>
        </exception-transition>
        <exception-transition type="AssetException">
            <targetStepName>proxy error</targetStepName>
        </exception-transition>
        <exception-transition type="NullPointerException">
            <targetStepName>proxy error</targetStepName>
        </exception-transition>
        <!-- Thumb Video -->
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('') AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>delete old thumb video</targetStepName>
        </transition>
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('')}">
            <targetStepName>save thumb video</targetStepName>
        </transition>
        <transition condition="${createThumbVideo}">
            <targetStepName>create thumb video</targetStepName>
        </transition>
        <!-- Thumb -->
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('') AND #thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('')}">
            <targetStepName>save thumb</targetStepName>
        </transition>
        <transition condition="${createThumb AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>create thumb</targetStepName>
        </transition>
        <transition condition="${createThumb}">
            <targetStepName>cannot create thumb</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </saveAssetStep>


    <noopStep name="proxy error"
              executionLabelExpression="there was an error creating/saving proxy. | fail? ${failOnError}"
    >
        <transition condition="${failOnError}">
            <targetStepName>proxy failed</targetStepName>
        </transition>
        <!-- Thumb Video -->
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('') AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>delete old thumb video</targetStepName>
        </transition>
        <transition condition="${thumbVideoFile != null AND !thumbVideoFile.absolutePath.equals('')}">
            <targetStepName>save thumb video</targetStepName>
        </transition>
        <transition condition="${createThumbVideo}">
            <targetStepName>create thumb video</targetStepName>
        </transition>
        <!-- Thumb -->
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('') AND #thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('')}">
            <targetStepName>save thumb</targetStepName>
        </transition>
        <transition condition="${createThumb AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>create thumb</targetStepName>
        </transition>
        <transition condition="${createThumb}">
            <targetStepName>cannot create thumb</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </noopStep>


    <!-- ................................................ Thumbnail Video Steps ................................................ -->
    <convertVideoStep name="create thumb video"
                      sourceFileExpression="${sourceFile}"
                      imageSequenceInfoExpression="${#imageSequenceInfo(#sourceContent(subject))}"
                      mediaConversionTemplateExpression="${thumbVideoTemplate}"
                      resultDataDef="tempThumbVideoFile"
                      priorityExpression="${thumbVideoPriority}"
                      continueOnException="true"
                      executionLabelExpression="Transcode thumb video from original file. | Profile: ${thumbVideoTemplate}"
                      pctComplete="55"
    >
        <transition condition="${tempThumbVideoFile?.exists()}">
            <targetStepName>set thumb video file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>thumb video error</targetStepName>
        </transition>
    </convertVideoStep>


    <setContextData name="set thumb video file"
                    targetDataDef="thumbVideoFile"
                    valueExpression="${tempThumbVideoFile}"
                    pctComplete="56"
                    devStep="true"
    >
        <transition condition="${#thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>delete old thumb video</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>save thumb video</targetStepName>
        </transition>
    </setContextData>


    <deleteFileStep name="delete old thumb video"
                    sourceFilesExpression="${ #thumbnailMovContent(subject)?.file }"
                    executionLabelExpression="deleting old thumb video: ${#thumbnailMovContent(subject)?.file?.absolutePath}"
                    continueOnException="true"
                    pctComplete="57"
                    nextStep="save thumb video"
    />


    <saveAssetStep name="save thumb video"
                   contentExpression="${thumbVideoFile}"
                   contentUseExpression="Thumbnail Video"
                   versionAssetExpression="false"
                   assetExpression="${subject.currentVersion}"
                   executionLabelExpression="Save new thumb video to asset | file: ${thumbVideoFile?.absolutePath}"
                   pctComplete="60"
    >
        <!-- Errors -->
        <exception-transition type="WorkflowException">
            <targetStepName>thumb video error</targetStepName>
        </exception-transition>
        <exception-transition type="AssetException">
            <targetStepName>thumb video error</targetStepName>
        </exception-transition>
        <exception-transition type="NullPointerException">
            <targetStepName>thumb video error</targetStepName>
        </exception-transition>
        <!-- Thumb -->
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('') AND #thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('')}">
            <targetStepName>save thumb</targetStepName>
        </transition>
        <transition condition="${createThumb AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>create thumb</targetStepName>
        </transition>
        <transition condition="${createThumb}">
            <targetStepName>cannot create thumb</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </saveAssetStep>


    <noopStep name="thumb video error"
              executionLabelExpression="there was an error creating/saving thumbnail video. | fail? ${failOnError}"
    >
        <transition condition="${failOnError}">
            <targetStepName>thumb video failed</targetStepName>
        </transition>
        <!-- Thumb -->
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('') AND #thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="${thumbFile != null AND !thumbFile.absolutePath.equals('')}">
            <targetStepName>save thumb</targetStepName>
        </transition>
        <transition condition="${createThumb AND #thumbnailMovContent(subject) != null AND #thumbnailMovContent(subject).file.exists()}">
            <targetStepName>create thumb</targetStepName>
        </transition>
        <transition condition="${createThumb}">
            <targetStepName>cannot create thumb</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </noopStep>


    <!-- ................................................... Thumbnail Steps ................................................... -->
    <convertImageStep name="create thumb"
                      sourceFileExpression="${#thumbnailMovContent(subject)?.file}"
                      resultDataDef="tempThumbFile"
                      thumbnailPercentageExpression="${thumbnailPercentage}"
                      priorityExpression="${thumbPriority}"
                      continueOnException="true"
                      executionLabelExpression="creating new thumbnail from existing Thumbnail Video."
                      pctComplete="75"

    >
        <transition condition="${tempThumbFile != null AND tempThumbFile.exists()}">
            <targetStepName>set thumb file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>thumb error</targetStepName>
        </transition>
    </convertImageStep>


    <setContextData name="set thumb file"
                    targetDataDef="thumbFile"
                    valueExpression="${tempThumbFile}"
                    pctComplete="76"
                    devStep="true"
    >
        <transition condition="${#thumbnailContent(subject) != null AND #thumbnailContent(subject).file.exists()}">
            <targetStepName>delete old thumb</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>save thumb</targetStepName>
        </transition>
    </setContextData>


    <deleteFileStep name="delete old thumb"
                    sourceFilesExpression="${ #thumbnailContent(subject)?.file }"
                    executionLabelExpression="deleting old thumb: ${#thumbnailContent(subject)?.file?.absolutePath}"
                    continueOnException="true"
                    pctComplete="77"
                    nextStep="save thumb"
    />


    <saveAssetStep name="save thumb"
                   contentExpression="${thumbFile}"
                   contentUseExpression="Thumbnail"
                   versionAssetExpression="false"
                   assetExpression="${subject.currentVersion}"
                   executionLabelExpression="Save new thumb to asset | file: ${thumbFile?.absolutePath}"
                   pctComplete="80"
    >
        <!-- Errors -->
        <exception-transition type="WorkflowException">
            <targetStepName>thumb error</targetStepName>
        </exception-transition>
        <exception-transition type="AssetException">
            <targetStepName>thumb error</targetStepName>
        </exception-transition>
        <exception-transition type="NullPointerException">
            <targetStepName>thumb error</targetStepName>
        </exception-transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </saveAssetStep>


    <noopStep name="thumb error"
              executionLabelExpression="there was an error creating/saving thumbnail. | fail? ${failOnError}"
    >
        <transition condition="${failOnError}">
            <targetStepName>thumb failed</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </noopStep>


    <noopStep name="cannot create thumb"
              executionLabelExpression="No thumbnailVideo exists on the asset. Thumbnails must be created from a valid thumbnailVideo. | fail? ${failOnError}"
    >
        <transition condition="${failOnError}">
            <targetStepName>thumb failed</targetStepName>
        </transition>
        <!-- Nothing more to do -->
        <transition condition="true">
            <targetStepName>cleanup</targetStepName>
        </transition>
    </noopStep>


    <!-- ................................................... Clean Up Steps .................................................... -->
    <noopStep name="cleanup"
              executionLabelExpression="temp files?... mezz? ${tempMezzFile != null AND tempMezzFile.exists()} | proxy? ${tempProxyFile != null AND tempProxyFile.exists()} | thumbnail Video? ${tempThumbVideoFile != null AND tempThumbVideoFile.exists()} | thumbnail? ${tempThumbFile != null AND tempThumbFile.exists()}"
              pctComplete="82"
    >
        <transition condition="${tempMezzFile != null AND tempMezzFile.exists()}">
            <targetStepName>delete temp mezz file</targetStepName>
        </transition>
        <transition condition="${tempProxyFile != null AND tempProxyFile.exists()}">
            <targetStepName>delete temp proxy file</targetStepName>
        </transition>
        <transition condition="${tempThumbVideoFile != null AND tempThumbVideoFile.exists()}">
            <targetStepName>delete temp thumbnail video file</targetStepName>
        </transition>
        <transition condition="${tempThumbFile != null AND tempThumbFile.exists()}">
            <targetStepName>delete temp thumbnail file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
    </noopStep>


    <deleteFileStep name="delete temp mezz file"
                    sourceFilesExpression="${tempMezzFile}"
                    continueOnException="true"
                    executionLabelExpression="deleting ${tempMezzFile.absolutePath}"
                    pctComplete="88"
    >
        <transition condition="${tempProxyFile != null AND tempProxyFile.exists()}">
            <targetStepName>delete temp proxy file</targetStepName>
        </transition>
        <transition condition="${tempThumbVideoFile != null AND tempThumbVideoFile.exists()}">
            <targetStepName>delete temp thumbnail video file</targetStepName>
        </transition>
        <transition condition="${tempThumbFile != null AND tempThumbFile.exists()}">
            <targetStepName>delete temp thumbnail file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
    </deleteFileStep>


    <deleteFileStep name="delete temp proxy file"
                    sourceFilesExpression="${tempProxyFile}"
                    continueOnException="true"
                    executionLabelExpression="deleting ${tempProxyFile.absolutePath}"
                    pctComplete="93"
    >
        <transition condition="${tempThumbVideoFile != null AND tempThumbVideoFile.exists()}">
            <targetStepName>delete temp thumbnail video file</targetStepName>
        </transition>
        <transition condition="${tempThumbFile != null AND tempThumbFile.exists()}">
            <targetStepName>delete temp thumbnail file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
    </deleteFileStep>


    <deleteFileStep name="delete temp thumbnail video file"
                    sourceFilesExpression="${tempThumbVideoFile}"
                    continueOnException="true"
                    executionLabelExpression="deleting ${tempThumbVideoFile.absolutePath}"
                    pctComplete="96"
    >
        <transition condition="${tempThumbFile != null AND tempThumbFile.exists()}">
            <targetStepName>delete temp thumbnail file</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
    </deleteFileStep>


    <deleteFileStep name="delete temp thumbnail file"
                    sourceFilesExpression="${tempThumbFile}"
                    continueOnException="true"
                    executionLabelExpression="deleting ${tempThumbFile.absolutePath}"
                    pctComplete="99"
                    nextStep="end"
    />


    <!-- ...................................................... End Steps ...................................................... -->
    <!-- success -->
    <noopStep name="end"	pctComplete="100"/>


    <!-- fail -->
    <failWorkflowStep name="mezz failed"
                      reasonExpression="Mezz failed. Check workflow steps for errors."
                      executionLabelExpression="Mezz failed. Check workflow steps for errors."
    />


    <failWorkflowStep name="proxy failed"
                      reasonExpression="Proxy failed. Check workflow steps for errors."
                      executionLabelExpression="Proxy failed. Check workflow steps for errors."
    />


    <failWorkflowStep name="thumb video failed"
                      reasonExpression="Thumbnail video failed. Check workflow steps for errors."
                      executionLabelExpression="Thumbnail video failed. Check workflow steps for errors."
    />


    <failWorkflowStep name="thumb failed"
                      reasonExpression="Thumbnail failed. Check workflow steps for errors."
                      executionLabelExpression="Thumbnail failed. Check workflow steps for errors."
    />


    <!-- .................................................. Context Data Defs .................................................. -->
    <!-- ............ Input Variables ............. -->
    <contextDataDef name="failOnError"          dataType="Boolean"      defaultDataExpression="${#sysconfig('workflows.default.proxies.failOnError') ?: true}"/>
    <!-- Mezz -->
    <contextDataDef name="mezzFile"             dataType="File"/>
    <contextDataDef name="createMezz"           dataType="Boolean"      defaultDataExpression="${#sysconfig('workflows.default.proxies.video.createMezz') ?: false}"/>
    <!-- Proxy -->
    <contextDataDef name="proxyFile"            dataType="File"/>
    <contextDataDef name="createProxy" 			dataType="Boolean"		defaultDataExpression="${#sysconfig('workflows.default.proxies.video.createProxy') ?: true}"/>
    <!-- Thumb Video -->
    <contextDataDef name="thumbVideoFile"       dataType="File"/>
    <contextDataDef name="createThumbVideo" 	dataType="Boolean"	    defaultDataExpression="${#sysconfig('workflows.default.proxies.video.createThumbVideo') ?: true}"/>
    <!-- Thumb -->
    <contextDataDef name="thumbFile"            dataType="File"/>
    <contextDataDef name="createThumb" 			dataType="Boolean"	    defaultDataExpression="${#sysconfig('workflows.default.proxies.video.createThumb') ?: true}"/>
    <!-- templates -->
    <contextDataDef name="mezzTemplate"    		dataType="String"       defaultDataExpression="${#sysconfig('workflows.default.proxies.video.mezzTemplate') ?: (#sysconfig('import.mezzanineSettingName') ?: 'FFmpeg Mezz')}" />
    <contextDataDef name="proxyTemplate"    	dataType="String"       defaultDataExpression="${#sysconfig('workflows.default.proxies.video.proxyTemplate') ?: (#sysconfig('import.proxySettingName') ?: 'FFmpeg Proxy')}" />
    <contextDataDef name="thumbVideoTemplate"   dataType="String"       defaultDataExpression="${#sysconfig('workflows.default.proxies.video.thumbVideoTemplate') ?: (#sysconfig('import.thumbnailMovSettingName') ?: 'FFmpeg Thumb MOV')}" />
    <contextDataDef name="thumbnailPercentage"  dataType="Integer"      defaultDataExpression="${50}"/>
    <contextDataDef name="prioritiesJson"       dataType="JSON">
        <description>
            A JSON with the structure:
            {"mezzanine":w, "proxy":x, "thumbnailVideo":y, "thumbnail":z}
        </description>
    </contextDataDef>

    <!-- .......... Processing variables .......... -->
    <contextDataDef name="sourceFile" 		    dataType="File"         defaultDataExpression="${#sourceContent(subject)?.file}"/>
    <contextDataDef name="mezzPriority"         dataType="Integer"      defaultDataExpression="${prioritiesJson?.get('mezzanine') != null? prioritiesJson.get('mezzanine').asText() : 0}"/>
    <contextDataDef name="proxyPriority"        dataType="Integer"      defaultDataExpression="${prioritiesJson?.get('proxy') != null? prioritiesJson.get('proxy').asText() : 0}"/>
    <contextDataDef name="thumbVideoPriority"   dataType="Integer"      defaultDataExpression="${prioritiesJson?.get('thumbnailVideo') != null? prioritiesJson.get('thumbnailVideo').asText() : 0}"/>
    <contextDataDef name="thumbPriority"        dataType="Integer"      defaultDataExpression="${prioritiesJson?.get('thumbnail') != null? prioritiesJson.get('thumbnail').asText() : 0}"/>
    <contextDataDef name="tempMezzFile"        	dataType="File"/>
    <contextDataDef name="tempProxyFile"        dataType="File"/>
    <contextDataDef name="tempThumbVideoFile"   dataType="File"/>
    <contextDataDef name="tempThumbFile"    	dataType="File"/>

</workflow>
