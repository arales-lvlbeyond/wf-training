<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
          xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
          id="ex15_rh"
          name="ex15_rh"
          executionLabelExpression="ex15_rh | "
          subjectDOClassName=""
          showInUserInterface="true"
          sdkVersion=""
>

    <initialStepName>set xml data def</initialStepName>

    <setContextData
            name="set xml data def"
            targetDataDef="xmlObject"
            valueExpression="${inputXMLFile}"
            nextStep="build json for each node"
            devStep="true"
    />

    <groovyStep name="build json for each node"
                executionLabelExpression="Building jsons per title node in titles element"
                resultDataDef="jsonMetadata"
                nextStep="end"
    >
        <script>
            <![CDATA[
			import groovy.*
			import groovy.json.*
			import groovy.util.XmlSlurper
			import org.jdom.output.XMLOutputter
			import com.fasterxml.jackson.databind.node.*
			import com.fasterxml.jackson.annotation.JsonIgnore
			import java.util.List

			def nodeJsons = []

			def titlesNodes = xmlObject.getChild('titles')?.getChildren()

			titlesNodes.each { title ->
				def workingTitle = title.getChild('facet')?.getAttributeValue('name')
                def workingTitleValue = title.getChild('facet')?.getChild('feature')?.getValue()
				def xmlMap = [:]

                xmlMap.fieldName = workingTitle
                xmlMap.value = workingTitleValue

                nodeJsons.add(xmlMap)
			}

			return nodeJsons
			]]>
        </script>
    </groovyStep>

    <!--<executeSubflowStep name="update metadata for title"-->
    <!--targetWorkflowId="queryAssetsByHouseCode"-->
    <!--subjectChangePath="${jsonMetadata}"-->
    <!--subflowTargetDataDef="titleAssetMetadata"-->
    <!--nextStep="end"-->
    <!--/>-->

    <!-- ................................................... End Steps .................................................... -->
    <!-- success -->
    <noopStep name="end" />
    <!-- ................................................... Data Defs .................................................... -->
    <!-- ............ INPUT ............. -->
    <contextDataDef name="inputXMLFile"                     dataType="File"         userInput="true" />
    <contextDataDef name="inputXMLFilePath"                 dataType="String"       defaultDataExpression="${inputXMLFile?.absolutePath}" />
    <contextDataDef name="xmlObject"                        dataType="XML"   />


    <!-- ......... PROCESSING ........... -->
    <contextDataDef name="jsonMetadata"                     dataType="JSON"         multiple="true"/>

    <contextDataDef name="testVal"                          dataType="String" />



</workflow>