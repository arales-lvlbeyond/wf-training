<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xsi:schemaLocation="
		http://levelsbeyond.com/schema/latest
		https://s3-us-west-2.amazonaws.com/schema.levelsbeyond.com/2.3.16.17962/studio.xsd
	"
	id="buildSimpleJson"
	name="buildSimpleJson"
	executionLabelExpression="buildSimpleJson | "
	subjectDOClassName=""
	showInUserInterface="true"
	sdkVersion=""
	resultDataDef="resultJson">


	<initialStepName>build json</initialStepName>
	
	<groovyStep name="build json"
		resultDataDef="resultJson"
		nextStep="end"
	>
		<script>
			<![CDATA[
				import groovy.json.*
				
				def json = [:]
				
				json.put("metadata", [:])
				json.put("arrayField", [])
				json.field1 = 'sample field value'
				json.numberField1 = 100
				json.booleanField = true
				
				// fill up metadata field with sample values
				json.metadata.put('testVal1', 'this is a field value')
				json.metadata.put('testVal2', 'hello')
				
				// fill up sample array field
				def testArray = [1, 2, 'String A', true]
				json.arrayField = testArray
				
				return JsonOutput.toJson(json)
			]]>
		</script>
	</groovyStep>
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end" />
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="resultJson"                       dataType="JSON"     defaultDataExpression="{}" />
</workflow>