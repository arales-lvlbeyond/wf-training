<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
          xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
          id="customBaseAssetIngest_rh"
          name="customBaseAssetIngest_rh"
          executionLabelExpression="customBaseAssetIngest_rh | "
          subjectDOClassName=""
          showInUserInterface="true"
          resultDataDef="assetMaster"
          sdkVersion=""
          group="Rob"
>

    <initialStepName>check if duplicate check is needed</initialStepName>


    <!-- .............................................. Initial Check Steps ............................................... -->
    <noopStep name="check if duplicate check is needed"
              executionLabelExpression="Check for duplicates? ${checkForDuplicate}"
              pctComplete="5"
    >
        <transition condition="${checkForDuplicate}">
            <targetStepName>check for duplicate asset</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>ingest asset</targetStepName>
        </transition>
    </noopStep>


    <queryStep name="check for duplicate asset"
               executionLabelExpression="Checking for asset with recordOID: ${fileSpecificMetadata.recordOID}"
               targetDataObjectClass="AssetMaster"
               resultDataDef="assetMaster"
               pctComplete="15"
    >
        <transition condition="${assetMaster == null}">
            <targetStepName>ingest asset</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>duplicate asset exists</targetStepName>
        </transition>
        <criteria>
            <![CDATA[
			<criteria>
				<and>
					<condition property="metadata.recordOID" op="eq">
						<test value="${T(org.apache.commons.lang.StringEscapeUtils).escapeXml(fileSpecificMetadata.recordOID)}"/>
					</condition>
				</and>
			</criteria>
			]]>
        </criteria>
    </queryStep>

    <failWorkflowStep name="duplicate asset exists"
                      reasonExpression="duplicate asset exists: ${assetMaster}"
                      executionLabelExpression="duplicate asset exists: ${assetMaster}">
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
    </failWorkflowStep>






    <!-- .................................................. Asset Steps ................................................... -->

    <saveAssetStep name="ingest asset"
                   assetExpression="${assetVersion}"
                   assetNameExpression="${assetName}"
                   contentExpression="${fileToIngest}"
                   contentUseExpression="${sourceAsMezz? '|SOURCE|MEZZANINE|' : 'Source'}"
                   versionAssetExpression="${versionAsset}"
                   resultDataDef="assetVersion"
                   executionLabelExpression="Ingesting ${fileToIngest.absolutePath}"
                   searchableFlagExpression="true"
                   pctComplete="95"
                   nextStep="get asset master"
    />



    <setContextData name="get asset master"
                    targetDataDef="assetMaster"
                    valueExpression="${assetVersion.masterAsset}"
                    executionLabelExpression="Getting the AssetMaster for Asset Version (ID = ${assetVersion.id})"
                    devStep="true"
                    pctComplete="99"
                    nextStep="end"
    />


    <!-- ................................................... End Steps .................................................... -->
    <!-- success -->
    <noopStep name="end"	pctComplete="100"/>


    <!-- ............................................... Context Data Defs ................................................ -->
    <!-- .......... Input Variables .......... -->
    <contextDataDef name="fileToIngest" 		    dataType="File"/>
    <contextDataDef name="sourceAsMezz"             dataType="Boolean"          defaultDataExpression="${#sysconfig('workflows.default.sourceIngest.sourceAsMezz') ?: true}"/>
    <contextDataDef name="checkForDuplicate"        dataType="Boolean"         />
    <contextDataDef name="overwriteExisting"        dataType="Boolean"          defaultDataExpression="${#sysconfig('workflows.default.sourceIngest.overwriteExisting') ?: false}"/>
    <contextDataDef name="versionDuplicate"         dataType="Boolean"          defaultDataExpression="${#sysconfig('workflows.default.sourceIngest.versionDuplicate') ?: false}"/>
    <contextDataDef name="assetName"                dataType="String"           defaultDataExpression="${fileToIngest.name}"/>

    <!-- ....... Processing Variables ........ -->
    <contextDataDef name="assetVersion" 		    dataType="Data Object"/>
    <contextDataDef name="assetMaster" 			    dataType="Data Object"/>
    <contextDataDef name="fileSpecificMetadata" dataType="JSON" />

    <!-- overwriteExisting trumps versionDuplicate -->
    <contextDataDef name="versionAsset"             dataType="Boolean"          defaultDataExpression="${overwriteExisting? false : versionDuplicate}"/>

</workflow>